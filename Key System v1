const fs = require("fs");
const fetch = require("node-fetch");

const GITHUB_USER = "07PkAstarothBR"; // seu usu√°rio do GitHub
const REPO = "07PkAstarothBRscripts";       // nome do reposit√≥rio
const FILE_PATH = "Key System v1";       // nome do arquivo no repo
const TOKEN = "SEU_TOKEN";         // seu token GitHub (com permiss√£o repo)

function generateKey() {
  const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_-+=<>?";
  let key = "";
  for (let i = 0; i < 30; i++) {
    key += chars.charAt(Math.floor(Math.random() * chars.length));
  }
  return key;
}

async function updateKey() {
  const key = generateKey();
  console.log(`üîë Nova key gerada: ${key}`);

  // conte√∫do do arquivo no GitHub
  const content = Buffer.from(`return "${key}"`).toString("base64");

  // pega o SHA atual do arquivo (necess√°rio para atualizar)
  const res = await fetch(`https://api.github.com/repos/${GITHUB_USER}/${REPO}/contents/${FILE_PATH}`, {
    headers: {
      "Authorization": `token ${TOKEN}`,
      "Accept": "application/vnd.github.v3+json"
    }
  });
  const data = await res.json();
  const sha = data.sha;

  // atualiza arquivo no GitHub
  const update = await fetch(`https://api.github.com/repos/${GITHUB_USER}/${REPO}/contents/${FILE_PATH}`, {
    method: "PUT",
    headers: {
      "Authorization": `token ${TOKEN}`,
      "Accept": "application/vnd.github.v3+json"
    },
    body: JSON.stringify({
      message: "üîë Atualizando key",
      content,
      sha
    })
  });

  if (update.ok) {
    console.log("‚úÖ Key atualizada com sucesso!");
  } else {
    const err = await update.json();
    console.error("‚ùå Erro ao atualizar:", err);
  }
}

// primeira execu√ß√£o
updateKey();

// repete a cada 16h (16 * 60 * 60 * 1000 ms)
setInterval(updateKey, 16 * 60 * 60 * 1000);